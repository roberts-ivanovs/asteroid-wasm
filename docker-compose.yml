version: "3.7"

services:
  node:
    build: ./backend
    container_name: dev-node
    command: sh -c "yarn install && yarn dev"
    ports:
      - 8001:8000
    env_file:
      - ./.env.dev
    volumes:
      - ./backend/:/srv/app
    depends_on:
      - db
  react:
    build: ./frontend
    container_name: dev-react
    command: sh -c "yarn install && yarn start"
    ports:
      - 3001:3000
    env_file:
      - ./.env.dev
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend/:/srv/app
      - /srv/app/node_modules
      - wasm:/srv/app/src/rust/pkg
    depends_on:
      - node
      - rust
    restart: on-failure
  db:
    image: neo4j:4.1.4
    container_name: dev-db
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    env_file: ./.env.dev
    volumes:
      - ./conf:/conf
      - ./data:/data
      - ./import:/import
      - ./logs:/logs
      - ./plugins:/plugins
  nginx:
    build: ./nginx
    container_name: dev-nginx
    ports:
      - 8080:80
    restart: always
    volumes:
      - static:/srv/app/static
      - media:/srv/app/media
    depends_on:
      - node
      - react
      - db
  rust:
    build: ./rust
    command: sh -c 'cargo watch -i .gitignore -i "pkg/*" -s "wasm-pack build --out-dir /srv/app/rust/pkg"'
    volumes:
      - ./rust:/srv/app/rust
      - wasm:/srv/app/rust/pkg
    restart: on-failure
volumes:
  wasm:
  postgres_data:
  media:
  static:
